name: Atlas

on: [push]

jobs:
  test:
    runs-on: ubuntu-18.04
    services:
      postgresql:
        image: postgres:10.1-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:5.0-alpine
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit==1.13
          curl -sSL https://raw.githubusercontent.com/sdispater/poetry/0.12.16/get-poetry.py | python
          curl -sSLf https://get.volta.sh | bash
          PATH=$HOME/.poetry/bin:$PATH NODE_ENV= make
      - name: Lint with pre-commit
        run: |
          PATH=$HOME/.poetry/bin:$PATH PATH=node_modules/.bin:$PATH pre-commit run -a -v
      - name: Test backend
        env:
          CELERY_BROKER_URL: redis://localhost:6379/0
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
          SENTRY_ENVIRONMENT: test
        run: |
          cd backend && PATH=$HOME/.poetry/bin:$PATH poetry run py.test -v --cov . --cov-report="xml:.artifacts/coverage.xml" --junit-xml=".artifacts/pytest.junit.xml"
      - name: Test frontend
        env:
          SENTRY_ENVIRONMENT: test
        run: |
          npm test
